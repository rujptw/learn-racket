#lang racket
(define firsts
  (lambda (l)
    (cond
      ((null? l) '())
      (else
       (cons (car (car l)) (firsts (cdr l)))))))

(define insertR
  (lambda ( new old lat)
    (cond
      ((null? lat) '())
      ((eq? old (car lat)) (cons old (cons new ( insertR new old (cdr lat)))))
      (else
       (cons (car lat) (insertR new old (cdr lat)))))))



(define insertL
  (lambda (new old lat)
    (cond
      ((null lat) '())
      (else
       (cond
         ((eq? (car lat) old) (cons new (cons old (cdr lat))))
         (else
          (cons (car lat) (insertL new old (cdr lat)))))))))
          

